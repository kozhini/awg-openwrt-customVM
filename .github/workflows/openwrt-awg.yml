name: Create Release Mediatek Filogic

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "v${{ matrix.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ['24.10.2']
        build_env:
          - pkgarch: aarch64_cortex-a53
            target: mediatek
            subtarget: filogic
            vermagic: 2ccac7a75355327cb6dfb4df1ecb575e

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v${{ matrix.tag }}
          fetch-depth: 0

      - name: Install deps + ccache
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: |
            dl
            staging_dir
            .ccache
          key: ${{ runner.os }}-openwrt-${{ matrix.tag }}-${{ matrix.build_env.pkgarch }}

      - name: Update and install feeds
        run: |
          pkgarch=${{ matrix.build_env.pkgarch }}
          target=${{ matrix.build_env.target }}
          subtarget=${{ matrix.build_env.subtarget }}

          echo "src-git awgopenwrt https://github.com/gargullia/awg-openwrt.git" > feeds.conf
          ./scripts/feeds update -a
          ./scripts/feeds install -a

          wget https://downloads.openwrt.org/releases/${{ matrix.tag }}/targets/${target}/${subtarget}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-proto-amneziawg=y" >> .config
          echo "CONFIG_DEVEL=y" >> .config
          echo "CONFIG_CCACHE=y" >> .config
          make defconfig

      - name: Patch vermagic
        run: |
          VERMAGIC=${{ matrix.build_env.vermagic }}
          echo "Forcing vermagic: $VERMAGIC"
          sed -i "s/^LINUX_RELEASE:=.*/LINUX_RELEASE:=$VERMAGIC/" include/kernel.mk
          echo "$VERMAGIC" > include/kernel-abiversion.mk

      - name: Build kernel + needed packages only
        run: |
          export FORCE_UNSAFE_CONFIGURE=1
          make tools/install -j$(nproc)
          make toolchain/install -j$(nproc)
          make target/linux/compile -j$(nproc)
          make package/amneziawg-tools/compile V=s -j$(nproc)
          make package/kmod-amneziawg/compile V=s -j$(nproc)
          make package/luci-proto-amneziawg/compile V=s -j$(nproc)

      - name: Collect artifacts
        run: |
          tag_name=${{ github.ref_name }}
          mkdir -p awgrelease
          postfix="${tag_name}_v${{ matrix.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"

          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-proto-amneziawg_*.ipk awgrelease/luci-proto-amneziawg_${postfix}.ipk

          echo "Actual vermagic:" > awgrelease/vermagic.txt
          cat build_dir/target-*/linux-*/.vermagic >> awgrelease/vermagic.txt

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*
          body_path: awgrelease/vermagic.txt

      - name: Cleanup
        run: |
          rm -rf awgrelease feeds.conf
